在【django-photologue的使用（2）】的基础上修改，开始【django-photologue的使用（3）】

【models.py】
from django.db import models

class Text(models.Model):
    text_title = models.CharField(max_length=30)
    text_content= models.CharField(max_length=500)
    photo_name=models.CharField(max_length=30)
    def __unicode__(self):             
        return self.text_title

class PhotoTextMap(models.Model):
    PhotoTextMap_texttitle=models.CharField(max_length=30)
    PhotoTextMap_phototype = models.CharField(max_length=30)
    PhotoTextMap_phototitle= models.CharField(max_length=30)
    def __unicode__(self):             
        return self.PhotoTextMap_texttitle

【admin.py】
from django.contrib import admin
from .models import Text
from .models import PhotoTextMap

admin.site.register(Text)
admin.site.register(PhotoTextMap)

【urls.py（app下）】
from django.conf.urls import url
from . import views

urlpatterns = [
    url(r'^upload/$',views.upload,name='upload'),
    url(r'^allupload/$',views.allupload,name='allupload'),
    url(r'^showall/$',views.showall,name='showall'),
    #url(r'^showmore/(?P<phototitle>\d\d\w\w\d\d\d\d\d\d\d\d\d\d\d\d\d\d)/$',views.showmore),
    url(r'^showmore/(?P<phototextmapPhotoTextMap_phototitle>\w+([-+.]\w+)*\w+([-.]\w+)*\w+([-.]\w+)*)/$',views.showmore),
]

【views.py】
from django.shortcuts import render
from django.http import HttpResponse
from photologue.models import *
from django.shortcuts import render_to_response
from django.conf import settings
import os
from PIL import Image
import datetime
from .models import Text
from .models import PhotoTextMap

def upload(request):
    return render(request,'example1/upload.html')

def allupload(request):
      try:
        f=request.FILES['xinwentuxiang']
        if f.size > 5000000:
          return HttpResponse("it is large!")
        try:
          parser=ImageFile.Parser()
          for chunk in f.chunks():
            parser.feed(chunk)
          img=parser.close()
        except IOError:
          return HttpResponse("it is an io error!")
        imageName='photologue/photos/'+f.name
        name=settings.STATIC_PATH+'/'+imageName
        img.save(file(name, 'wb'))
      except UnicodeEncodeError:
        return render_to_response('example1/upload.html',{'image_error':"please use English"})

      now ='00TB'+datetime.datetime.now().strftime("%Y%m%d%H%M%S")
      photoInfo=Photo(image=imageName,title=now,slug=now,is_public=True)
      photoInfo.save()

      phototype="0000"

      try:
        f1=request.FILES['fengmiantuxiang']
        if f1.size > 5000000:
          return HttpResponse("it is large!")
        try:
          parser1=ImageFile.Parser()
          for chunk1 in f1.chunks():
            parser1.feed(chunk1)
          img1=parser1.close()
        except IOError:
          return HttpResponse("it is an io error!")
        imageName1='photologue/photos/'+f1.name
        name1=settings.STATIC_PATH+'/'+imageName1
        img1.save(file(name1, 'wb'))
      except UnicodeEncodeError:
        return render_to_response('example1/upload.html',{'image_error':"please use English"})

      now1 ='11TB'+datetime.datetime.now().strftime("%Y%m%d%H%M%S")
      photoInfo1=Photo(image=imageName1,title=now1,slug=now1,is_public=True)
      photoInfo1.save()

      phototype1="0001"

      title=request.POST['xinwenwenbenkuang']
      content=request.POST['xinwenwenbenyu']
      name=request.POST['tuxiangwenbenkuang']
      tt=Text()
      tt.text_title=title
      tt.text_content=content
      tt.photo_name=name
      tt.save()

      pe=PhotoTextMap()
      pe.PhotoTextMap_texttitle=title
      pe.PhotoTextMap_phototype=phototype
      pe.PhotoTextMap_phototitle=now
      pe.save()

      pe1=PhotoTextMap()
      pe1.PhotoTextMap_texttitle=title
      pe1.PhotoTextMap_phototype=phototype1
      pe1.PhotoTextMap_phototitle=now1
      pe1.save()

      return HttpResponse("it is ok!") 

def showall(request):
      photo_list= Photo.objects.all()
      text_list=Text.objects.all()
      phototextmap_list=PhotoTextMap.objects.all()
      return render_to_response('example1/showall.html',{'photo_list':photo_list,'text_list':text_list,'phototextmap_list':phototextmap_list})

def showmore(request,phototextmapPhotoTextMap_phototitle):
      m=phototextmapPhotoTextMap_phototitle
      pp=PhotoTextMap.objects.get(PhotoTextMap_phototitle=m)
      p=pp.PhotoTextMap_texttitle
      t=Text.objects.get(text_title=p)
      photo_list= Photo.objects.all()
      phototextmap_list=PhotoTextMap.objects.all()
      return render_to_response('example1/showmore.html',{'photo_list':photo_list,'phototextmap_list':phototextmap_list,'t':t})

【upload.html】
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>上传图片</title>
</head>
<body>
<form enctype="multipart/form-data" id="biaodan" name="biaodan" method="post" action="/example1/allupload/" >
<div>
请上传封面图像：<input type="file" id="fengmiantuxiang" name="fengmiantuxiang" /><br><br>
请上传新闻图像：<input type="file" id="xinwentuxiang" name="xinwentuxiang" /><br><br>
请输入图像名称：<input type="text" id="tuxiangwenbenkuang" name="tuxiangwenbenkuang"><br><br>
请输入新闻标题：<input type="text" id="xinwenwenbenkuang" name="xinwenwenbenkuang"><br><br>
请输入新闻内容：<br><textarea id="xinwenwenbenyu" name="xinwenwenbenyu" cols="45" rows="15"></textarea><br><br>
<input type="submit" id="anliu" name="anliu" value="确认上传" />
</div>
</form>
</body>
</html>

【showall.html】
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>显示所有图片</title>
<style type="text/css">

.toplnk:link {color:#000; text-decoration:none;}
.toplnk:active {color:#000; text-decoration:none;}
.toplnk:visited {color:#000; text-decoration:none;}
.toplnk:hover {color:#000; text-decoration:none;}

.top{
   overflow:hidden;
   text-overflow:ellipsis;
   display:-webkit-box;
   -webkit-line-clamp:2;
   -webkit-box-orient:vertical;
}

.lnk{
   float:left;
}

</style>
</head>
<body>
{% for phototextmap in phototextmap_list %}
{% for text in text_list %} 
{% for photo in photo_list %} 
{% if text.text_title == phototextmap.PhotoTextMap_texttitle and phototextmap.PhotoTextMap_phototype == '0001' and phototextmap.PhotoTextMap_phototitle == photo.title %}
<a href="/example1/showmore/{{phototextmap.PhotoTextMap_phototitle}}/"><img src="{{ photo.get_thumbnail_url}}" class="lnk"></a>
<a href="/example1/showmore/{{phototextmap.PhotoTextMap_phototitle}}/" class="toplnk">{{ text.text_title }}</a>
<a href="/example1/showmore/{{phototextmap.PhotoTextMap_phototitle}}/" class="toplnk"><p class="top">{{text.text_content}}</p></a>
<br>
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}
</body>
</html>

【showmore.html】
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>显示详细</title>
<style type="text/css">

.coo{
     text-align:center;
}

.pot{
    word-wrap:break-word;
    text-align:justify;
    font-size:16px;
}

</style>
</head>
<body>
{% if t %} 
{% for photo in photo_list %}
{% for phototextmap in phototextmap_list %} 
{% if phototextmap.PhotoTextMap_texttitle == t.text_title and phototextmap.PhotoTextMap_phototype == "0000" and phototextmap.PhotoTextMap_phototitle == photo.title %}
<div class="coo">
<h3>{{t.text_title}}</h3>
<img src="{{photo.get_display_url}}">
<p>{{t.photo_name}}</p>
</div>
<div class="pot"><pre>{{t.text_content}}</pre></div>
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}
</body>
</html>